version: '3.9'
services:
  mysqlService:
    image: mysql:latest
    container_name: mysql
    networks:
      - kanban-network
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USERNAME: root
      MYSQL_PASSWORD: root
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"

  user-service:
    image: userimage
    container_name: usercontainer
    build: UserService/
    restart: always
    networks:
      - kanban-network
    ports:
      - "8081:8081"
    depends_on:
      - mysqlService
  #      - apigateway

  kanban-service:
    image: kanbanimage
    container_name: kanban-container
    build: KanbanService/
    restart: always
    networks:
      - kanban-network
    ports:
      - "8082:8082"
    depends_on:
      - mongoService
      - rabbitmqService


  mongoService:
    image: mongo
    container_name: mongo
    ports:
      - "27017:27017"
    networks:
      - kanban-network

  notification-service:
    image: notificationimage
    container_name: notification-container
    build: NotificationService/
    restart: always
    networks:
      - kanban-network
    ports:
      - "8083:8083"
    depends_on:
      - mongoService
      - rabbitmqService

  rabbitmqService:
    image: rabbitmq:management
    container_name: rabbitmq-container
    ports:
      - "5672:15672"
      - "15672:15672"
    networks:
      - kanban-network
    restart: always
#    volumes:
#      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
#      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq









  #  apigateway:
  #    container_name: spring-cloud-api-gateway
  #    build: API_Gateway/
  #    restart: always
  #    networks:
  #      - mynetwork6
  #    ports:
  #      - 9000:9000
  #
  eurekaservice:
    container_name: spring-cloud-eureka
    build: EurekaService/
    restart: always
    networks:
      - kanban-network
    ports:
      - 8761:8761


networks:
  kanban-network:
    driver: bridge